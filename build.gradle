plugins {
    alias(libs.plugins.versions)
    alias(libs.plugins.spotless)
    alias(libs.plugins.nexusPublish)
    alias(libs.plugins.axionRelease)
    alias(libs.plugins.testLogger)
    alias(libs.plugins.testRetry)
    alias(libs.plugins.shadow)

    id 'java-library'
    id 'groovy'
}

group = 'com.github.lburgazzoli'

apply from: "${rootProject.projectDir}/gradle/style.gradle"
apply from: "${rootProject.projectDir}/gradle/quality.gradle"
apply from: "${rootProject.projectDir}/gradle/publishing-release.gradle"
apply from: "${rootProject.projectDir}/gradle/publishing-release-tasks.gradle"
apply from: "${rootProject.projectDir}/gradle/versions.gradle"
apply from: "${rootProject.projectDir}/gradle/publish.gradle"
apply from: "${rootProject.projectDir}/gradle/release.gradle"

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    implementation libs.slf4j
    implementation libs.bundles.kafka
    implementation libs.bundles.chicory
    implementation libs.bundles.extism
    implementation libs.bundles.jackson

    testImplementation platform("org.apache.groovy:groovy-bom:${libs.versions.groovy.get()}")
    testImplementation "org.apache.groovy:groovy"
    testImplementation platform("org.spockframework:spock-bom:${libs.versions.spock.get()}")
    testImplementation "org.spockframework:spock-core"

    testImplementation libs.bundles.testing
    testImplementation libs.bundles.testingIt
    testImplementation libs.bundles.testingKafka

    testRuntimeOnly libs.bundles.log4j
}


compileJava {
    options.release = 17
}

test {
    useJUnitPlatform()

    maxParallelForks = Runtime.runtime.availableProcessors() ?: 1

    retry {
        maxRetries = 0
        maxFailures = 5
    }

    systemProperty "jna.library.path", "/usr/local/lib"

}

testlogger {
    theme 'mocha-parallel'
    showStandardStreams true
}

// disable standard jar task so we can have a single ube jar as result
jar.enabled = false

shadowJar {
    mergeServiceFiles()

    dependencies {
        // exclude dependencies provided in the kafka connect classpath
        exclude dependency("org.apache.kafka:connect-api:.*")
        exclude dependency("org.apache.kafka:kafka-clients:.*")
        exclude dependency('org.slf4j:.*:.*')
    }
}

tasks.register('allDeps', DependencyReportTask)
